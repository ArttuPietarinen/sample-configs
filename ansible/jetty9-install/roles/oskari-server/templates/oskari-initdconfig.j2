
JAVA={{ java_cmd }}
JETTY_USER=jetty
JETTY_ARGS=jetty.http.port={{ server_port }}
JETTY_HOME={{ jetty_home }}
JETTY_BASE={{ oskari_dir }}/{{ oskari_component }}

# custom tmp dir since CentOS clears /tmp periodically
# /etc/init.d/oskari-server always sets java.io.tmpdir to TMPDIR or /tmp
# Assigning it here is overwritten in init-script so use the env variable!
TMPDIR={{ oskari_tmp_dir }}/{{ oskari_component }}

{% if use_proxy %}
# Proxy config
JAVA_OPTIONS="${JAVA_OPTIONS} -Dhttp.proxyHost={{ server_proxy }} -Dhttp.proxyPort={{ server_proxy_port }} -Dhttp.nonProxyHosts={{ server_proxy_non_proxy_hosts }}"
JAVA_OPTIONS="${JAVA_OPTIONS} -Dhttps.proxyHost={{ server_proxy }} -Dhttps.proxyPort={{ server_proxy_port }} -Dhttps.nonProxyHosts={{ server_proxy_non_proxy_hosts }}"
{% endif %}
JAVA_OPTIONS="${JAVA_OPTIONS} -server -Xms512m -Xmx3192m"
JAVA_OPTIONS="${JAVA_OPTIONS} -XX:+UseG1GC -XX:+CMSClassUnloadingEnabled -XX:+CrashOnOutOfMemoryError"
JAVA_OPTIONS="${JAVA_OPTIONS} -XX:MaxMetaspaceSize=4g"
JAVA_OPTIONS="${JAVA_OPTIONS} -XX:+HeapDumpOnOutOfMemoryError"
JAVA_OPTIONS="${JAVA_OPTIONS} -Doskari.syslog.level=warn"

{% if use_single_jetty or oskari_component == 'oskari-geoserver' %}
JAVA_OPTIONS="${JAVA_OPTIONS} -DGEOSERVER_DATA_DIR={{ geoserver_data_dir }}"
{% endif %}